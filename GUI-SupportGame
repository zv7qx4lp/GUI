local Notif = {}

-- Dịch vụ
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")

-- Ẩn GUI để tránh bị phát hiện
local function HideUI(gui)
    local HIDEUI = get_hidden_gui or gethui
    if syn and typeof(syn) == "table" and RenderWindow then
        syn.protect_gui = gethui
    end
    if HIDEUI then
        gui.Parent = HIDEUI()
    elseif syn and syn.protect_gui then
        syn.protect_gui(gui)
        gui.Parent = CoreGui
    elseif CoreGui:FindFirstChild("RobloxGui") then
        gui.Parent = CoreGui.RobloxGui
    else
        gui.Parent = CoreGui
    end
end

-- Tạo ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NotificationGui"
screenGui.ResetOnSpawn = false
HideUI(screenGui)

-- Tạo khung chính chứa thông báo
local frame = Instance.new("Frame")
frame.AnchorPoint = Vector2.new(0.5, 0)
frame.BackgroundTransparency = 1
frame.Position = UDim2.new(0.5, 0, 0.05, 0) -- Giữa phía trên
frame.Size = UDim2.new(0.3, 0, 0.3, 0)
frame.Parent = screenGui

-- UIListLayout để xếp thông báo
local uiListLayout = Instance.new("UIListLayout")
uiListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
uiListLayout.Padding = UDim.new(0, 8)
uiListLayout.Parent = frame

-- Cấu hình mặc định
local config = {
    backgroundColor = Color3.fromRGB(30, 30, 30), -- Màu nền tối
    borderColor = Color3.fromRGB(15, 15, 15), -- Viền tối
    textColor = Color3.fromRGB(220, 220, 220), -- Chữ sáng
    font = Enum.Font.GothamBlack, -- Font hiện đại
    textSize = 16, -- Kích thước chữ
    cornerRadius = 8, -- Bo góc mềm mại
    defaultDuration = 5, -- Thời gian mặc định (giây)
    shadowColor = Color3.fromRGB(0, 0, 0), -- Màu bóng
    shadowTransparency = 0.4, -- Độ trong suốt bóng
    shadowOffset = Vector2.new(2, 2) -- Độ lệch bóng
}

-- Hàm tạo thông báo mới
function Notif.New(params)
    -- Kiểm tra tham số
    params = type(params) == "table" and params or {}
    local text = tostring(params.text or "Thông báo")
    local time = tonumber(params.time) or config.defaultDuration
    local textColor = params.textColor or config.textColor
    local backgroundColor = params.backgroundColor or config.backgroundColor

    -- Khung chứa thông báo
    local containerFrame = Instance.new("Frame")
    containerFrame.BackgroundTransparency = 1
    containerFrame.Size = UDim2.new(0, 0, 0, 0)
    containerFrame.Parent = frame

    -- Khung bóng đổ (mô phỏng hiệu ứng bóng)
    local shadowFrame = Instance.new("Frame")
    shadowFrame.BackgroundColor3 = config.shadowColor
    shadowFrame.BackgroundTransparency = config.shadowTransparency
    shadowFrame.Size = UDim2.new(1, 4, 1, 4) -- Lớn hơn một chút để tạo bóng
    shadowFrame.Position = UDim2.new(0, config.shadowOffset.X, 0, config.shadowOffset.Y) -- Lệch để tạo bóng
    shadowFrame.ZIndex = 0 -- Đặt sau khung chính
    shadowFrame.Parent = containerFrame

    local shadowCorner = Instance.new("UICorner")
    shadowCorner.CornerRadius = UDim.new(0, config.cornerRadius)
    shadowCorner.Parent = shadowFrame

    -- Khung chính thông báo
    local notifFrame = Instance.new("Frame")
    notifFrame.AnchorPoint = Vector2.new(0.5, 0)
    notifFrame.AutomaticSize = Enum.AutomaticSize.X
    notifFrame.BackgroundColor3 = backgroundColor
    notifFrame.BackgroundTransparency = 1 -- Bắt đầu mờ
    notifFrame.Position = UDim2.new(0.5, 0, 0, -60) -- Bắt đầu trên màn hình
    notifFrame.Size = UDim2.new(0, 0, 0, 32)
    notifFrame.ZIndex = 1 -- Đặt trên khung bóng
    notifFrame.Parent = containerFrame

    -- Giao diện
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, config.cornerRadius)
    uiCorner.Parent = notifFrame

    local uiPadding = Instance.new("UIPadding")
    uiPadding.PaddingBottom = UDim.new(0, 4)
    uiPadding.PaddingLeft = UDim.new(0, 10)
    uiPadding.PaddingRight = UDim.new(0, 10)
    uiPadding.PaddingTop = UDim.new(0, 4)
    uiPadding.Parent = notifFrame

    local uiStroke = Instance.new("UIStroke")
    uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    uiStroke.Color = config.borderColor
    uiStroke.Thickness = 1.5
    uiStroke.Transparency = 1 -- Bắt đầu mờ
    uiStroke.Parent = notifFrame

    -- Nhãn chữ
    local textLabel = Instance.new("TextLabel")
    textLabel.Font = config.font
    textLabel.Text = text
    textLabel.TextColor3 = textColor
    textLabel.TextSize = config.textSize
    textLabel.TextTransparency = 1 -- Bắt đầu mờ
    textLabel.AutomaticSize = Enum.AutomaticSize.X
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(0, 0, 0, 24)
    textLabel.Parent = notifFrame

    local textPadding = Instance.new("UIPadding")
    textPadding.PaddingLeft = UDim.new(0, 8)
    textPadding.PaddingRight = UDim.new(0, 32)
    textPadding.Parent = textLabel

    -- Nút đóng
    local closeButton = Instance.new("TextButton")
    closeButton.Font = Enum.Font.SourceSans
    closeButton.Text = ""
    closeButton.BackgroundColor3 = config.borderColor
    closeButton.BackgroundTransparency = 1
    closeButton.AnchorPoint = Vector2.new(1, 0.5)
    closeButton.Position = UDim2.new(1, -4, 0.5, 0)
    closeButton.Size = UDim2.new(0, 24, 0, 24)
    closeButton.Parent = notifFrame

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 5)
    closeCorner.Parent = closeButton

    local closeImage = Instance.new("ImageButton")
    closeImage.Image = "rbxassetid://3926305904"
    closeImage.ImageColor3 = textColor
    closeImage.ImageRectOffset = Vector2.new(924, 724)
    closeImage.ImageRectSize = Vector2.new(36, 36)
    closeImage.AnchorPoint = Vector2.new(0.5, 0.5)
    closeImage.BackgroundTransparency = 1
    closeImage.Position = UDim2.new(0.5, 0, 0.5, 0)
    closeImage.Size = UDim2.new(0, 18, 0, 18)
    closeImage.ZIndex = 2
    closeImage.ImageTransparency = 1 -- Bắt đầu mờ
    closeImage.Parent = closeButton

    -- Animation vào
    local tweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out)
    TweenService:Create(shadowFrame, tweenInfo, { BackgroundTransparency = config.shadowTransparency }):Play()
    TweenService:Create(notifFrame, tweenInfo, {
        BackgroundTransparency = 0.15,
        Position = UDim2.new(0.5, 0, 0, 0), -- Trượt xuống
        Size = UDim2.new(0, 0, 0, 32) -- Giữ chiều cao
    }):Play()
    TweenService:Create(uiStroke, tweenInfo, { Transparency = 0 }):Play()
    TweenService:Create(textLabel, tweenInfo, { TextTransparency = 0 }):Play()
    TweenService:Create(closeImage, tweenInfo, { ImageTransparency = 0 }):Play()
    TweenService:Create(containerFrame, tweenInfo, { Size = UDim2.new(0, 100, 0, 40) }):Play()

    -- Hàm đóng thông báo
    local function closeNotif()
        local closeTweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Exponential, Enum.EasingDirection.In)
        TweenService:Create(shadowFrame, closeTweenInfo, { BackgroundTransparency = 1 }):Play()
        TweenService:Create(notifFrame, closeTweenInfo, {
            BackgroundTransparency = 1,
            Position = UDim2.new(0.5, 0, 0, -60) -- Trượt lên
        }):Play()
        TweenService:Create(uiStroke, closeTweenInfo, { Transparency = 1 }):Play()
        TweenService:Create(textLabel, closeTweenInfo, { TextTransparency = 1 }):Play()
        TweenService:Create(closeImage, closeTweenInfo, { ImageTransparency = 1 }):Play()
        task.wait(0.3)
        TweenService:Create(containerFrame, closeTweenInfo, { Size = UDim2.new(0, 0, 0, 0) }):Play()
        task.wait(0.3)
        containerFrame:Destroy()
    end

    -- Tương tác nút đóng
    closeButton.MouseEnter:Connect(function()
        TweenService:Create(closeButton, tweenInfo, { BackgroundTransparency = 0.7 }):Play()
        TweenService:Create(closeImage, tweenInfo, { ImageColor3 = Color3.fromRGB(255, 50, 50) }):Play()
    end)

    closeButton.MouseLeave:Connect(function()
        TweenService:Create(closeButton, tweenInfo, { BackgroundTransparency = 1 }):Play()
        TweenService:Create(closeImage, tweenInfo, { ImageColor3 = textColor }):Play()
    end)

    closeButton.MouseButton1Click:Connect(closeNotif)
    closeImage.MouseButton1Click:Connect(closeNotif)

    -- Tự động đóng sau thời gian
    task.delay(time, closeNotif)
end

return Notif
